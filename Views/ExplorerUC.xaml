<UserControl x:Class="GM4ManagerWPF.Views.ExplorerUC"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:local="clr-namespace:GM4ManagerWPF.Localization"
            xmlns:conv="clr-namespace:GM4ManagerWPF.Converters"
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:viewmodels="clr-namespace:GM4ManagerWPF.ViewModels"
            xmlns:behaviors="clr-namespace:GM4ManagerWPF.Behaviors"
            xmlns:ui="http://schemas.modernwpf.com/2019"
			mc:Ignorable="d"
			d:DesignHeight="700" d:DesignWidth="900">
    <UserControl.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <conv:PermissionToTooltipConverter x:Key="PermissionTooltipConverter" />
        <conv:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="20*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="120"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Grid.ColumnSpan="4" Orientation="Horizontal">
            <TextBox Height="40" Text="{Binding SelectedPath, UpdateSourceTrigger=PropertyChanged}"
                IsReadOnly="True" Margin="10,5,0,10" Width="400" IsReadOnlyCaretVisible="True" />
            <Button Height="40" Margin="10,5,0,10" Style="{DynamicResource AccentButtonStyle}" Content="{Binding Res[txtPleaseSelectNetworkDirectory]}"
                Command="{Binding OpenFolderDialogCommand}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="4" Margin="10,5,0,5">
            <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="{Binding Res[headerDirectoryStructure]}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" Padding="10,5,0,5" FontWeight="Bold" />
            <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="{Binding Res[loadingPermissions]}"
                   Margin="30,0,0,0"
                   Foreground="DarkRed"
                   FontWeight="Bold"
                   Visibility="{Binding IsLoadingPermissions, Converter={StaticResource BoolToVisibilityConverter}}" />
        </StackPanel>
        <Label Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Content="{Binding Res[headerDirectoryPermissions]}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" Padding="10,5,0,5" FontWeight="Bold"  />
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,10,0" BorderThickness="1" BorderBrush="{DynamicResource ListAccentLow}">
            <TreeView x:Name="DirectoryTree" Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0"
                  ItemsSource="{Binding RootItems}"
                  behaviors:TreeViewSelectedItemBehavior.SelectedItem="{Binding SelectedNode, Mode=TwoWay}"
                  FontSize="14">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                    IsHitTestVisible="False">
                            <Image Width="16" Height="16">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/Ressources/Icons/folder.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                <Setter Property="Source" Value="/Ressources/Icons/folder_open.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Name}"
                               VerticalAlignment="Center"
                               Margin="10,3,3,3"
                               Padding="5,0,0,0"
                             >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Margin" Value="15,5,5,5" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumHighBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="behaviors:TreeViewSelectedCommandBehavior.Command"
                                Value="{Binding OnNodeSelectedAsyncCommand}" />
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </Border>

        <Grid Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2">
            <DataGrid
          ItemsSource="{Binding CurrentPermissions}"
          x:Name="PermissionsGrid"
          AutoGenerateColumns="False"
          CanUserAddRows="False"
          SelectedItem="{Binding SelectedPermission, Mode=TwoWay}"
          IsReadOnly="True"
          >
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding Res[menuGroupMembers]}"
                      Command="{Binding ShowGroupMembersCommand}"
                      CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Group" Binding="{Binding IdentityReference}" />
                    <DataGridTemplateColumn Header="Permissions">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="32" Height="32">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="/Ressources/Icons/readonly.png" />
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding ., Converter={StaticResource PermissionTooltipConverter}}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanModify}" Value="True">
                                                    <Setter Property="Source" Value="/Ressources/Icons/edit.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Border Background="White" Opacity="0.8"
                    Visibility="{Binding IsInheritedFromParent, Converter={StaticResource BoolToVisibilityConverter}}"
                    Panel.ZIndex="1">
                <TextBlock Text="{Binding Res[tooltipInheritanceEnabled]}"
                           FontStyle="Italic"
                           Foreground="Gray"
                           FontSize="16"
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           Padding="20"></TextBlock>
            </Border>
            <Button Margin="0,90,0,0" Panel.ZIndex="2" Content="{Binding Res[btnDeactivateInheritance]}"
                Command="{Binding DisableInheritanceCommand}"
                Style="{DynamicResource AccentButtonStyle}"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Visibility="{Binding IsInheritedFromParent, Converter={StaticResource BoolToVisibilityConverter}}" />
            <Button Content="{Binding Res[btnEnableInheritance]}"
                Command="{Binding EnableInheritanceRecursivlyCommand}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Style="{DynamicResource AccentButtonStyle}"
                Visibility="{Binding IsInheritedFromParent, Converter={StaticResource InverseBoolToVisibilityConverter}}" />
        </Grid>
        <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="10,5,0,0">
            <Button Content="{Binding Res[btnAddMember]}"
              Command="{Binding AddSelectedMemberCommand}"
              Style="{DynamicResource AccentButtonStyle}"
              Margin="0,0,10,0" />
            <Button Content="{Binding Res[btnRemoveMember]}"
              Command="{Binding RemoveSelectedMemberCommand}"
              Style="{DynamicResource AccentButtonStyle}" />
        </StackPanel>

        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
            Margin="10" Orientation="Vertical" VerticalAlignment="Center">
            <Label Content="{Binding Res[headerCreateFolder]}" HorizontalAlignment="Left"
                   VerticalAlignment="Center" Height="30" Padding="10,5,0,5"
                   FontWeight="Bold" />
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBox Width="200"
                 Margin="0,0,10,0"
                 VerticalAlignment="Center"
                 Text="{Binding NewFolderName, UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox Content="{Binding Res[txtDisableInheritance]}"
                  VerticalAlignment="Center" IsChecked="{Binding DisableInheritanceForNewFolder}" />
            </StackPanel>
            <Button Content="{Binding Res[btnCreateFolder]}"
            Margin="0,10,0,0"
            VerticalAlignment="Center"
            Command="{Binding CreateNewFolderCommand}"
            IsEnabled="{Binding CanCreateFolder}" />
        </StackPanel>
    </Grid>
</UserControl>
